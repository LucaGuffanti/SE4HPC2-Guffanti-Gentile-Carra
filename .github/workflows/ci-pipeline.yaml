name: Build and Test
run-name: Execute ci/cd workflow
on: [push]
jobs:
    build-project:
        name: Build Project
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                submodules: true            
            - name: Install CMAKE
              run: sudo apt update && sudo apt install -y cmake

            - name: Install MPI
              run: sudo apt install -y mpich

            - name: Build Project
              run: chmod +x build.sh && ./build.sh
        
            - name: Run tests
              run: cd build && ./test_multiplication
              
    install-singularity:
        name: Install Singularity
        runs-on: ubuntu-latest
        steps:    

          - name: Checkout repository
            uses: actions/checkout@v2
            with:
              submodules: true  

          # Install dependencies Singularity relies on
          - name: Install Singularity Dependencies
            run: sudo apt-get update && sudo apt-get install -y build-essential libseccomp-dev pkg-config squashfs-tools cryptsetup curl wget git

          # Set up caching for Go
          - name: Set Up cache for Go
            id: cache-go
            uses: actions/cache@v2
            with:
              path: /opt/go
              key: ${{ runner.os }}-go-${{ hashFiles('go_version.txt') }}
              restore-keys: |
                ${{ runner.os }}-go-
                ${{ runner.os }}
            
          # Set up caching for Singularity
          - name: Set Up cache for Singularity
            id: cache-singularity
            uses: actions/cache@v2
            with:
              path: /opt/singularity
              key: ${{ runner.os }}-singularity-${{ hashFiles('singularity_version.txt') }}
              restore-keys: |
                ${{ runner.os }}-singularity-
                ${{ runner.os }}
                  
          # Install Go if it's not cached
          - if: ${{ steps.cache-go.outputs.cache-hit != 'true' }}
            name: Install Go if not cached
            run: |
              GO_VERSION=$(cat go_version.txt)
              wget -O /tmp/go${GO_VERSION}.linux-amd64.tar.gz https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz
              sudo tar -C /opt -xzf /tmp/go${GO_VERSION}.linux-amd64.tar.gz
              sudo mv /opt/go /opt/go-${GO_VERSION}
              sudo ln -s /opt/go-${GO_VERSION} /opt/go
          
          - name: Add Go to PATH
            run: echo "/opt/go/bin" >> $GITHUB_PATH
          
          # Install Singularity if it's not cached
          - if: ${{ steps.cache-singularity.outputs.cache-hit != 'true'}}
            name: Install Singularity if not cached
            run: |
              SINGULARITY_VERSION=$(cat singularity_version.txt)
              SINGULARITY_INSTALL_DIR=/opt/singularity
              git clone https://github.com/hpcng/singularity.git
              cd singularity
              git checkout v${SINGULARITY_VERSION}
              ./mconfig --prefix=${SINGULARITY_INSTALL_DIR}
              cd builddir
              make
              sudo make install

          - name: Add Singularity to PATH
            run: echo "/opt/singularity/bin" >> $GITHUB_PATH

          - name: Check that everything worked
            run: |
              go version
              singularity --version

          - name: Build Container Image and run it
            run: |
              cd container
              sudo singularity build --writable-tmpfs mm.sif matrix_multiplication.def
              sudo singularity run --writable-tmpfs mm.sif
