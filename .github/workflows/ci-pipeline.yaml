name: Continuous Integration and Deployment Workflow
run-name: Execute ci/cd workflow
on: [push]
jobs:
    setup:
      name: Setup common environment
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
          with:
            submodules: true 
        
        - name: Install common dependencies
          run: |
            sudo apt update
            sudo apt install -y git
            sudo apt install -y curl wget
            sudo apt install -y build-essential cmake
            sudo apt install -y cmake
            sudo apt install -y sshpass
            sudo apt install -y mpich

        - name: Install Singularity
          uses: eWaterCycle/setup-singularity@v7
          with:
            singularity-version: 3.8.7
        
    build-project-local:
      name: Build Project
      runs-on: ubuntu-latest
      needs: [setup]
      steps:        
        - name: Build Project
          run: chmod +x build.sh && ./build.sh
    
    test-project-local:
      name: Test Project
      runs-on: ubuntu-latest
      needs: [build-project-local]
      steps:
        - name: Run all tests
          run: cd build && ./test_multiplication # to check if the path is correct

    build-container:
        name: Build Container
        runs-on: ubuntu-latest
        needs: [setup]
        steps:
          - name: Build Container Image
            run: |
             cd container
             ls /opt/singularity
             ls /opt/singularity/bin
             sudo /opt/singularity/bin/singularity --version
             sudo /opt/singularity/bin/singularity build --no-test matrix.sif matrix_multiplication.def
    
    test-container:
      name: Test Container
      runs-on: ubuntu-latest
      needs: [build-container]
      steps:
        - name: Run all tests
          run: |
            sudo /opt/singularity/bin/singularity test matrix.sif
      
    upload-artifact:
      name: Upload Artifact
      runs-on: ubuntu-latest
      needs: [test-container, test-project-local] # TODO: check if test-project-local is needed
      steps:
        - name: Login to Singularity Remote
          run: |
            ls
            cd container
            ls
            echo "${{ secrets.SINGULARITY_ACCESS_TOKEN }}" > singularity_token.txt
            /opt/singularity/bin/singularity remote login --tokenfile singularity_token.txt
            /opt/singularity/bin/singularity push -U matrix.sif library://lucaguffanti/se/matrix:latest
            cd ..
              
    deploy-on-galileo:
      name: Deploy on Galileo
      runs-on: ubuntu-latest
      needs: [upload-artifact]
      steps:
            
        - name: SSH into GALILEO
          run: |
            sshpass -p ${{ secrets.GALILEO_TOKEN }} ssh -o StrictHostKeyChecking=no -t a08trb59@login.g100.cineca.it '
                singularity pull library://lucaguffanti/se/matrix:latest
                singularity run matrix_latest.sif
                rm matrix_latest.sif
                exit
            '
